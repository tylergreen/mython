Created by PLY version 3.2 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> sexp
Rule 1     sexp -> atom
Rule 2     sexp -> list
Rule 3     sexp -> quoted
Rule 4     sexp -> qquoted
Rule 5     sexp -> unquoted
Rule 6     sexp -> spliced
Rule 7     quoted -> QUOTE sexp
Rule 8     qquoted -> BACKQUOTE sexp
Rule 9     unquoted -> COMMA sexp
Rule 10    spliced -> COMMA_AT list
Rule 11    list -> LPAREN sexps RPAREN
Rule 12    sexps -> sexp sexps
Rule 13    sexps -> empty
Rule 14    empty -> <empty>
Rule 15    atom -> INT
Rule 16    atom -> FLOAT
Rule 17    atom -> STRING
Rule 18    atom -> SYMBOL

Terminals, with rules where they appear

BACKQUOTE            : 8
COMMA                : 9
COMMA_AT             : 10
FLOAT                : 16
INT                  : 15
LPAREN               : 11
QUOTE                : 7
RPAREN               : 11
STRING               : 17
SYMBOL               : 18
error                : 

Nonterminals, with rules where they appear

atom                 : 1
empty                : 13
list                 : 2 10
qquoted              : 4
quoted               : 3
sexp                 : 7 8 9 12 0
sexps                : 11 12
spliced              : 6
unquoted             : 5

Parsing method: LALR

state 0

    (0) S' -> . sexp
    (1) sexp -> . atom
    (2) sexp -> . list
    (3) sexp -> . quoted
    (4) sexp -> . qquoted
    (5) sexp -> . unquoted
    (6) sexp -> . spliced
    (15) atom -> . INT
    (16) atom -> . FLOAT
    (17) atom -> . STRING
    (18) atom -> . SYMBOL
    (11) list -> . LPAREN sexps RPAREN
    (7) quoted -> . QUOTE sexp
    (8) qquoted -> . BACKQUOTE sexp
    (9) unquoted -> . COMMA sexp
    (10) spliced -> . COMMA_AT list

    INT             shift and go to state 3
    FLOAT           shift and go to state 6
    STRING          shift and go to state 1
    SYMBOL          shift and go to state 5
    LPAREN          shift and go to state 14
    QUOTE           shift and go to state 4
    BACKQUOTE       shift and go to state 16
    COMMA           shift and go to state 11
    COMMA_AT        shift and go to state 9

    quoted                         shift and go to state 2
    list                           shift and go to state 7
    sexp                           shift and go to state 8
    spliced                        shift and go to state 10
    qquoted                        shift and go to state 12
    atom                           shift and go to state 13
    unquoted                       shift and go to state 15

state 1

    (17) atom -> STRING .

    INT             reduce using rule 17 (atom -> STRING .)
    FLOAT           reduce using rule 17 (atom -> STRING .)
    STRING          reduce using rule 17 (atom -> STRING .)
    SYMBOL          reduce using rule 17 (atom -> STRING .)
    LPAREN          reduce using rule 17 (atom -> STRING .)
    QUOTE           reduce using rule 17 (atom -> STRING .)
    BACKQUOTE       reduce using rule 17 (atom -> STRING .)
    COMMA           reduce using rule 17 (atom -> STRING .)
    COMMA_AT        reduce using rule 17 (atom -> STRING .)
    RPAREN          reduce using rule 17 (atom -> STRING .)
    $end            reduce using rule 17 (atom -> STRING .)


state 2

    (3) sexp -> quoted .

    $end            reduce using rule 3 (sexp -> quoted .)
    INT             reduce using rule 3 (sexp -> quoted .)
    FLOAT           reduce using rule 3 (sexp -> quoted .)
    STRING          reduce using rule 3 (sexp -> quoted .)
    SYMBOL          reduce using rule 3 (sexp -> quoted .)
    LPAREN          reduce using rule 3 (sexp -> quoted .)
    QUOTE           reduce using rule 3 (sexp -> quoted .)
    BACKQUOTE       reduce using rule 3 (sexp -> quoted .)
    COMMA           reduce using rule 3 (sexp -> quoted .)
    COMMA_AT        reduce using rule 3 (sexp -> quoted .)
    RPAREN          reduce using rule 3 (sexp -> quoted .)


state 3

    (15) atom -> INT .

    INT             reduce using rule 15 (atom -> INT .)
    FLOAT           reduce using rule 15 (atom -> INT .)
    STRING          reduce using rule 15 (atom -> INT .)
    SYMBOL          reduce using rule 15 (atom -> INT .)
    LPAREN          reduce using rule 15 (atom -> INT .)
    QUOTE           reduce using rule 15 (atom -> INT .)
    BACKQUOTE       reduce using rule 15 (atom -> INT .)
    COMMA           reduce using rule 15 (atom -> INT .)
    COMMA_AT        reduce using rule 15 (atom -> INT .)
    RPAREN          reduce using rule 15 (atom -> INT .)
    $end            reduce using rule 15 (atom -> INT .)


state 4

    (7) quoted -> QUOTE . sexp
    (1) sexp -> . atom
    (2) sexp -> . list
    (3) sexp -> . quoted
    (4) sexp -> . qquoted
    (5) sexp -> . unquoted
    (6) sexp -> . spliced
    (15) atom -> . INT
    (16) atom -> . FLOAT
    (17) atom -> . STRING
    (18) atom -> . SYMBOL
    (11) list -> . LPAREN sexps RPAREN
    (7) quoted -> . QUOTE sexp
    (8) qquoted -> . BACKQUOTE sexp
    (9) unquoted -> . COMMA sexp
    (10) spliced -> . COMMA_AT list

    INT             shift and go to state 3
    FLOAT           shift and go to state 6
    STRING          shift and go to state 1
    SYMBOL          shift and go to state 5
    LPAREN          shift and go to state 14
    QUOTE           shift and go to state 4
    BACKQUOTE       shift and go to state 16
    COMMA           shift and go to state 11
    COMMA_AT        shift and go to state 9

    quoted                         shift and go to state 2
    list                           shift and go to state 7
    sexp                           shift and go to state 17
    spliced                        shift and go to state 10
    qquoted                        shift and go to state 12
    atom                           shift and go to state 13
    unquoted                       shift and go to state 15

state 5

    (18) atom -> SYMBOL .

    INT             reduce using rule 18 (atom -> SYMBOL .)
    FLOAT           reduce using rule 18 (atom -> SYMBOL .)
    STRING          reduce using rule 18 (atom -> SYMBOL .)
    SYMBOL          reduce using rule 18 (atom -> SYMBOL .)
    LPAREN          reduce using rule 18 (atom -> SYMBOL .)
    QUOTE           reduce using rule 18 (atom -> SYMBOL .)
    BACKQUOTE       reduce using rule 18 (atom -> SYMBOL .)
    COMMA           reduce using rule 18 (atom -> SYMBOL .)
    COMMA_AT        reduce using rule 18 (atom -> SYMBOL .)
    RPAREN          reduce using rule 18 (atom -> SYMBOL .)
    $end            reduce using rule 18 (atom -> SYMBOL .)


state 6

    (16) atom -> FLOAT .

    INT             reduce using rule 16 (atom -> FLOAT .)
    FLOAT           reduce using rule 16 (atom -> FLOAT .)
    STRING          reduce using rule 16 (atom -> FLOAT .)
    SYMBOL          reduce using rule 16 (atom -> FLOAT .)
    LPAREN          reduce using rule 16 (atom -> FLOAT .)
    QUOTE           reduce using rule 16 (atom -> FLOAT .)
    BACKQUOTE       reduce using rule 16 (atom -> FLOAT .)
    COMMA           reduce using rule 16 (atom -> FLOAT .)
    COMMA_AT        reduce using rule 16 (atom -> FLOAT .)
    RPAREN          reduce using rule 16 (atom -> FLOAT .)
    $end            reduce using rule 16 (atom -> FLOAT .)


state 7

    (2) sexp -> list .

    $end            reduce using rule 2 (sexp -> list .)
    INT             reduce using rule 2 (sexp -> list .)
    FLOAT           reduce using rule 2 (sexp -> list .)
    STRING          reduce using rule 2 (sexp -> list .)
    SYMBOL          reduce using rule 2 (sexp -> list .)
    LPAREN          reduce using rule 2 (sexp -> list .)
    QUOTE           reduce using rule 2 (sexp -> list .)
    BACKQUOTE       reduce using rule 2 (sexp -> list .)
    COMMA           reduce using rule 2 (sexp -> list .)
    COMMA_AT        reduce using rule 2 (sexp -> list .)
    RPAREN          reduce using rule 2 (sexp -> list .)


state 8

    (0) S' -> sexp .



state 9

    (10) spliced -> COMMA_AT . list
    (11) list -> . LPAREN sexps RPAREN

    LPAREN          shift and go to state 14

    list                           shift and go to state 18

state 10

    (6) sexp -> spliced .

    $end            reduce using rule 6 (sexp -> spliced .)
    INT             reduce using rule 6 (sexp -> spliced .)
    FLOAT           reduce using rule 6 (sexp -> spliced .)
    STRING          reduce using rule 6 (sexp -> spliced .)
    SYMBOL          reduce using rule 6 (sexp -> spliced .)
    LPAREN          reduce using rule 6 (sexp -> spliced .)
    QUOTE           reduce using rule 6 (sexp -> spliced .)
    BACKQUOTE       reduce using rule 6 (sexp -> spliced .)
    COMMA           reduce using rule 6 (sexp -> spliced .)
    COMMA_AT        reduce using rule 6 (sexp -> spliced .)
    RPAREN          reduce using rule 6 (sexp -> spliced .)


state 11

    (9) unquoted -> COMMA . sexp
    (1) sexp -> . atom
    (2) sexp -> . list
    (3) sexp -> . quoted
    (4) sexp -> . qquoted
    (5) sexp -> . unquoted
    (6) sexp -> . spliced
    (15) atom -> . INT
    (16) atom -> . FLOAT
    (17) atom -> . STRING
    (18) atom -> . SYMBOL
    (11) list -> . LPAREN sexps RPAREN
    (7) quoted -> . QUOTE sexp
    (8) qquoted -> . BACKQUOTE sexp
    (9) unquoted -> . COMMA sexp
    (10) spliced -> . COMMA_AT list

    INT             shift and go to state 3
    FLOAT           shift and go to state 6
    STRING          shift and go to state 1
    SYMBOL          shift and go to state 5
    LPAREN          shift and go to state 14
    QUOTE           shift and go to state 4
    BACKQUOTE       shift and go to state 16
    COMMA           shift and go to state 11
    COMMA_AT        shift and go to state 9

    quoted                         shift and go to state 2
    list                           shift and go to state 7
    sexp                           shift and go to state 19
    spliced                        shift and go to state 10
    qquoted                        shift and go to state 12
    atom                           shift and go to state 13
    unquoted                       shift and go to state 15

state 12

    (4) sexp -> qquoted .

    $end            reduce using rule 4 (sexp -> qquoted .)
    INT             reduce using rule 4 (sexp -> qquoted .)
    FLOAT           reduce using rule 4 (sexp -> qquoted .)
    STRING          reduce using rule 4 (sexp -> qquoted .)
    SYMBOL          reduce using rule 4 (sexp -> qquoted .)
    LPAREN          reduce using rule 4 (sexp -> qquoted .)
    QUOTE           reduce using rule 4 (sexp -> qquoted .)
    BACKQUOTE       reduce using rule 4 (sexp -> qquoted .)
    COMMA           reduce using rule 4 (sexp -> qquoted .)
    COMMA_AT        reduce using rule 4 (sexp -> qquoted .)
    RPAREN          reduce using rule 4 (sexp -> qquoted .)


state 13

    (1) sexp -> atom .

    $end            reduce using rule 1 (sexp -> atom .)
    INT             reduce using rule 1 (sexp -> atom .)
    FLOAT           reduce using rule 1 (sexp -> atom .)
    STRING          reduce using rule 1 (sexp -> atom .)
    SYMBOL          reduce using rule 1 (sexp -> atom .)
    LPAREN          reduce using rule 1 (sexp -> atom .)
    QUOTE           reduce using rule 1 (sexp -> atom .)
    BACKQUOTE       reduce using rule 1 (sexp -> atom .)
    COMMA           reduce using rule 1 (sexp -> atom .)
    COMMA_AT        reduce using rule 1 (sexp -> atom .)
    RPAREN          reduce using rule 1 (sexp -> atom .)


state 14

    (11) list -> LPAREN . sexps RPAREN
    (12) sexps -> . sexp sexps
    (13) sexps -> . empty
    (1) sexp -> . atom
    (2) sexp -> . list
    (3) sexp -> . quoted
    (4) sexp -> . qquoted
    (5) sexp -> . unquoted
    (6) sexp -> . spliced
    (14) empty -> .
    (15) atom -> . INT
    (16) atom -> . FLOAT
    (17) atom -> . STRING
    (18) atom -> . SYMBOL
    (11) list -> . LPAREN sexps RPAREN
    (7) quoted -> . QUOTE sexp
    (8) qquoted -> . BACKQUOTE sexp
    (9) unquoted -> . COMMA sexp
    (10) spliced -> . COMMA_AT list

    RPAREN          reduce using rule 14 (empty -> .)
    INT             shift and go to state 3
    FLOAT           shift and go to state 6
    STRING          shift and go to state 1
    SYMBOL          shift and go to state 5
    LPAREN          shift and go to state 14
    QUOTE           shift and go to state 4
    BACKQUOTE       shift and go to state 16
    COMMA           shift and go to state 11
    COMMA_AT        shift and go to state 9

    quoted                         shift and go to state 2
    sexps                          shift and go to state 20
    list                           shift and go to state 7
    sexp                           shift and go to state 21
    spliced                        shift and go to state 10
    qquoted                        shift and go to state 12
    atom                           shift and go to state 13
    unquoted                       shift and go to state 15
    empty                          shift and go to state 22

state 15

    (5) sexp -> unquoted .

    $end            reduce using rule 5 (sexp -> unquoted .)
    INT             reduce using rule 5 (sexp -> unquoted .)
    FLOAT           reduce using rule 5 (sexp -> unquoted .)
    STRING          reduce using rule 5 (sexp -> unquoted .)
    SYMBOL          reduce using rule 5 (sexp -> unquoted .)
    LPAREN          reduce using rule 5 (sexp -> unquoted .)
    QUOTE           reduce using rule 5 (sexp -> unquoted .)
    BACKQUOTE       reduce using rule 5 (sexp -> unquoted .)
    COMMA           reduce using rule 5 (sexp -> unquoted .)
    COMMA_AT        reduce using rule 5 (sexp -> unquoted .)
    RPAREN          reduce using rule 5 (sexp -> unquoted .)


state 16

    (8) qquoted -> BACKQUOTE . sexp
    (1) sexp -> . atom
    (2) sexp -> . list
    (3) sexp -> . quoted
    (4) sexp -> . qquoted
    (5) sexp -> . unquoted
    (6) sexp -> . spliced
    (15) atom -> . INT
    (16) atom -> . FLOAT
    (17) atom -> . STRING
    (18) atom -> . SYMBOL
    (11) list -> . LPAREN sexps RPAREN
    (7) quoted -> . QUOTE sexp
    (8) qquoted -> . BACKQUOTE sexp
    (9) unquoted -> . COMMA sexp
    (10) spliced -> . COMMA_AT list

    INT             shift and go to state 3
    FLOAT           shift and go to state 6
    STRING          shift and go to state 1
    SYMBOL          shift and go to state 5
    LPAREN          shift and go to state 14
    QUOTE           shift and go to state 4
    BACKQUOTE       shift and go to state 16
    COMMA           shift and go to state 11
    COMMA_AT        shift and go to state 9

    quoted                         shift and go to state 2
    list                           shift and go to state 7
    sexp                           shift and go to state 23
    spliced                        shift and go to state 10
    qquoted                        shift and go to state 12
    atom                           shift and go to state 13
    unquoted                       shift and go to state 15

state 17

    (7) quoted -> QUOTE sexp .

    $end            reduce using rule 7 (quoted -> QUOTE sexp .)
    INT             reduce using rule 7 (quoted -> QUOTE sexp .)
    FLOAT           reduce using rule 7 (quoted -> QUOTE sexp .)
    STRING          reduce using rule 7 (quoted -> QUOTE sexp .)
    SYMBOL          reduce using rule 7 (quoted -> QUOTE sexp .)
    LPAREN          reduce using rule 7 (quoted -> QUOTE sexp .)
    QUOTE           reduce using rule 7 (quoted -> QUOTE sexp .)
    BACKQUOTE       reduce using rule 7 (quoted -> QUOTE sexp .)
    COMMA           reduce using rule 7 (quoted -> QUOTE sexp .)
    COMMA_AT        reduce using rule 7 (quoted -> QUOTE sexp .)
    RPAREN          reduce using rule 7 (quoted -> QUOTE sexp .)


state 18

    (10) spliced -> COMMA_AT list .

    $end            reduce using rule 10 (spliced -> COMMA_AT list .)
    INT             reduce using rule 10 (spliced -> COMMA_AT list .)
    FLOAT           reduce using rule 10 (spliced -> COMMA_AT list .)
    STRING          reduce using rule 10 (spliced -> COMMA_AT list .)
    SYMBOL          reduce using rule 10 (spliced -> COMMA_AT list .)
    LPAREN          reduce using rule 10 (spliced -> COMMA_AT list .)
    QUOTE           reduce using rule 10 (spliced -> COMMA_AT list .)
    BACKQUOTE       reduce using rule 10 (spliced -> COMMA_AT list .)
    COMMA           reduce using rule 10 (spliced -> COMMA_AT list .)
    COMMA_AT        reduce using rule 10 (spliced -> COMMA_AT list .)
    RPAREN          reduce using rule 10 (spliced -> COMMA_AT list .)


state 19

    (9) unquoted -> COMMA sexp .

    INT             reduce using rule 9 (unquoted -> COMMA sexp .)
    FLOAT           reduce using rule 9 (unquoted -> COMMA sexp .)
    STRING          reduce using rule 9 (unquoted -> COMMA sexp .)
    SYMBOL          reduce using rule 9 (unquoted -> COMMA sexp .)
    LPAREN          reduce using rule 9 (unquoted -> COMMA sexp .)
    QUOTE           reduce using rule 9 (unquoted -> COMMA sexp .)
    BACKQUOTE       reduce using rule 9 (unquoted -> COMMA sexp .)
    COMMA           reduce using rule 9 (unquoted -> COMMA sexp .)
    COMMA_AT        reduce using rule 9 (unquoted -> COMMA sexp .)
    RPAREN          reduce using rule 9 (unquoted -> COMMA sexp .)
    $end            reduce using rule 9 (unquoted -> COMMA sexp .)


state 20

    (11) list -> LPAREN sexps . RPAREN

    RPAREN          shift and go to state 24


state 21

    (12) sexps -> sexp . sexps
    (12) sexps -> . sexp sexps
    (13) sexps -> . empty
    (1) sexp -> . atom
    (2) sexp -> . list
    (3) sexp -> . quoted
    (4) sexp -> . qquoted
    (5) sexp -> . unquoted
    (6) sexp -> . spliced
    (14) empty -> .
    (15) atom -> . INT
    (16) atom -> . FLOAT
    (17) atom -> . STRING
    (18) atom -> . SYMBOL
    (11) list -> . LPAREN sexps RPAREN
    (7) quoted -> . QUOTE sexp
    (8) qquoted -> . BACKQUOTE sexp
    (9) unquoted -> . COMMA sexp
    (10) spliced -> . COMMA_AT list

    RPAREN          reduce using rule 14 (empty -> .)
    INT             shift and go to state 3
    FLOAT           shift and go to state 6
    STRING          shift and go to state 1
    SYMBOL          shift and go to state 5
    LPAREN          shift and go to state 14
    QUOTE           shift and go to state 4
    BACKQUOTE       shift and go to state 16
    COMMA           shift and go to state 11
    COMMA_AT        shift and go to state 9

    quoted                         shift and go to state 2
    sexps                          shift and go to state 25
    list                           shift and go to state 7
    sexp                           shift and go to state 21
    spliced                        shift and go to state 10
    qquoted                        shift and go to state 12
    atom                           shift and go to state 13
    unquoted                       shift and go to state 15
    empty                          shift and go to state 22

state 22

    (13) sexps -> empty .

    RPAREN          reduce using rule 13 (sexps -> empty .)


state 23

    (8) qquoted -> BACKQUOTE sexp .

    INT             reduce using rule 8 (qquoted -> BACKQUOTE sexp .)
    FLOAT           reduce using rule 8 (qquoted -> BACKQUOTE sexp .)
    STRING          reduce using rule 8 (qquoted -> BACKQUOTE sexp .)
    SYMBOL          reduce using rule 8 (qquoted -> BACKQUOTE sexp .)
    LPAREN          reduce using rule 8 (qquoted -> BACKQUOTE sexp .)
    QUOTE           reduce using rule 8 (qquoted -> BACKQUOTE sexp .)
    BACKQUOTE       reduce using rule 8 (qquoted -> BACKQUOTE sexp .)
    COMMA           reduce using rule 8 (qquoted -> BACKQUOTE sexp .)
    COMMA_AT        reduce using rule 8 (qquoted -> BACKQUOTE sexp .)
    RPAREN          reduce using rule 8 (qquoted -> BACKQUOTE sexp .)
    $end            reduce using rule 8 (qquoted -> BACKQUOTE sexp .)


state 24

    (11) list -> LPAREN sexps RPAREN .

    INT             reduce using rule 11 (list -> LPAREN sexps RPAREN .)
    FLOAT           reduce using rule 11 (list -> LPAREN sexps RPAREN .)
    STRING          reduce using rule 11 (list -> LPAREN sexps RPAREN .)
    SYMBOL          reduce using rule 11 (list -> LPAREN sexps RPAREN .)
    LPAREN          reduce using rule 11 (list -> LPAREN sexps RPAREN .)
    QUOTE           reduce using rule 11 (list -> LPAREN sexps RPAREN .)
    BACKQUOTE       reduce using rule 11 (list -> LPAREN sexps RPAREN .)
    COMMA           reduce using rule 11 (list -> LPAREN sexps RPAREN .)
    COMMA_AT        reduce using rule 11 (list -> LPAREN sexps RPAREN .)
    RPAREN          reduce using rule 11 (list -> LPAREN sexps RPAREN .)
    $end            reduce using rule 11 (list -> LPAREN sexps RPAREN .)


state 25

    (12) sexps -> sexp sexps .

    RPAREN          reduce using rule 12 (sexps -> sexp sexps .)

