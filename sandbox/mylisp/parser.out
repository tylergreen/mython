Created by PLY version 3.2 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> sexp
Rule 1     sexp -> atom
Rule 2     sexp -> list
Rule 3     sexp -> quoted
Rule 4     sexp -> qquoted
Rule 5     sexp -> unquoted
Rule 6     sexp -> spliced
Rule 7     sexp -> dotted_list
Rule 8     quoted -> QUOTE sexp
Rule 9     qquoted -> BACKQUOTE sexp
Rule 10    unquoted -> COMMA sexp
Rule 11    spliced -> COMMA_AT list
Rule 12    dotted_list -> LPAREN sexps DOT sexp RPAREN
Rule 13    list -> LPAREN sexps RPAREN
Rule 14    sexps -> sexp sexps
Rule 15    sexps -> empty
Rule 16    empty -> <empty>
Rule 17    atom -> INT
Rule 18    atom -> FLOAT
Rule 19    atom -> STRING
Rule 20    atom -> SYMBOL

Terminals, with rules where they appear

BACKQUOTE            : 9
COMMA                : 10
COMMA_AT             : 11
DOT                  : 12
FLOAT                : 18
INT                  : 17
LPAREN               : 12 13
QUOTE                : 8
RPAREN               : 12 13
STRING               : 19
SYMBOL               : 20
error                : 

Nonterminals, with rules where they appear

atom                 : 1
dotted_list          : 7
empty                : 15
list                 : 2 11
qquoted              : 4
quoted               : 3
sexp                 : 8 9 10 12 14 0
sexps                : 12 13 14
spliced              : 6
unquoted             : 5

Parsing method: LALR

state 0

    (0) S' -> . sexp
    (1) sexp -> . atom
    (2) sexp -> . list
    (3) sexp -> . quoted
    (4) sexp -> . qquoted
    (5) sexp -> . unquoted
    (6) sexp -> . spliced
    (7) sexp -> . dotted_list
    (17) atom -> . INT
    (18) atom -> . FLOAT
    (19) atom -> . STRING
    (20) atom -> . SYMBOL
    (13) list -> . LPAREN sexps RPAREN
    (8) quoted -> . QUOTE sexp
    (9) qquoted -> . BACKQUOTE sexp
    (10) unquoted -> . COMMA sexp
    (11) spliced -> . COMMA_AT list
    (12) dotted_list -> . LPAREN sexps DOT sexp RPAREN

    INT             shift and go to state 10
    FLOAT           shift and go to state 6
    STRING          shift and go to state 1
    SYMBOL          shift and go to state 5
    LPAREN          shift and go to state 15
    QUOTE           shift and go to state 4
    BACKQUOTE       shift and go to state 17
    COMMA           shift and go to state 12
    COMMA_AT        shift and go to state 8

    quoted                         shift and go to state 2
    dotted_list                    shift and go to state 3
    list                           shift and go to state 7
    sexp                           shift and go to state 9
    spliced                        shift and go to state 11
    qquoted                        shift and go to state 13
    atom                           shift and go to state 14
    unquoted                       shift and go to state 16

state 1

    (19) atom -> STRING .

    $end            reduce using rule 19 (atom -> STRING .)
    INT             reduce using rule 19 (atom -> STRING .)
    FLOAT           reduce using rule 19 (atom -> STRING .)
    STRING          reduce using rule 19 (atom -> STRING .)
    SYMBOL          reduce using rule 19 (atom -> STRING .)
    LPAREN          reduce using rule 19 (atom -> STRING .)
    QUOTE           reduce using rule 19 (atom -> STRING .)
    BACKQUOTE       reduce using rule 19 (atom -> STRING .)
    COMMA           reduce using rule 19 (atom -> STRING .)
    COMMA_AT        reduce using rule 19 (atom -> STRING .)
    RPAREN          reduce using rule 19 (atom -> STRING .)
    DOT             reduce using rule 19 (atom -> STRING .)


state 2

    (3) sexp -> quoted .

    INT             reduce using rule 3 (sexp -> quoted .)
    FLOAT           reduce using rule 3 (sexp -> quoted .)
    STRING          reduce using rule 3 (sexp -> quoted .)
    SYMBOL          reduce using rule 3 (sexp -> quoted .)
    LPAREN          reduce using rule 3 (sexp -> quoted .)
    QUOTE           reduce using rule 3 (sexp -> quoted .)
    BACKQUOTE       reduce using rule 3 (sexp -> quoted .)
    COMMA           reduce using rule 3 (sexp -> quoted .)
    COMMA_AT        reduce using rule 3 (sexp -> quoted .)
    RPAREN          reduce using rule 3 (sexp -> quoted .)
    DOT             reduce using rule 3 (sexp -> quoted .)
    $end            reduce using rule 3 (sexp -> quoted .)


state 3

    (7) sexp -> dotted_list .

    INT             reduce using rule 7 (sexp -> dotted_list .)
    FLOAT           reduce using rule 7 (sexp -> dotted_list .)
    STRING          reduce using rule 7 (sexp -> dotted_list .)
    SYMBOL          reduce using rule 7 (sexp -> dotted_list .)
    LPAREN          reduce using rule 7 (sexp -> dotted_list .)
    QUOTE           reduce using rule 7 (sexp -> dotted_list .)
    BACKQUOTE       reduce using rule 7 (sexp -> dotted_list .)
    COMMA           reduce using rule 7 (sexp -> dotted_list .)
    COMMA_AT        reduce using rule 7 (sexp -> dotted_list .)
    RPAREN          reduce using rule 7 (sexp -> dotted_list .)
    DOT             reduce using rule 7 (sexp -> dotted_list .)
    $end            reduce using rule 7 (sexp -> dotted_list .)


state 4

    (8) quoted -> QUOTE . sexp
    (1) sexp -> . atom
    (2) sexp -> . list
    (3) sexp -> . quoted
    (4) sexp -> . qquoted
    (5) sexp -> . unquoted
    (6) sexp -> . spliced
    (7) sexp -> . dotted_list
    (17) atom -> . INT
    (18) atom -> . FLOAT
    (19) atom -> . STRING
    (20) atom -> . SYMBOL
    (13) list -> . LPAREN sexps RPAREN
    (8) quoted -> . QUOTE sexp
    (9) qquoted -> . BACKQUOTE sexp
    (10) unquoted -> . COMMA sexp
    (11) spliced -> . COMMA_AT list
    (12) dotted_list -> . LPAREN sexps DOT sexp RPAREN

    INT             shift and go to state 10
    FLOAT           shift and go to state 6
    STRING          shift and go to state 1
    SYMBOL          shift and go to state 5
    LPAREN          shift and go to state 15
    QUOTE           shift and go to state 4
    BACKQUOTE       shift and go to state 17
    COMMA           shift and go to state 12
    COMMA_AT        shift and go to state 8

    quoted                         shift and go to state 2
    dotted_list                    shift and go to state 3
    list                           shift and go to state 7
    sexp                           shift and go to state 18
    spliced                        shift and go to state 11
    qquoted                        shift and go to state 13
    atom                           shift and go to state 14
    unquoted                       shift and go to state 16

state 5

    (20) atom -> SYMBOL .

    $end            reduce using rule 20 (atom -> SYMBOL .)
    INT             reduce using rule 20 (atom -> SYMBOL .)
    FLOAT           reduce using rule 20 (atom -> SYMBOL .)
    STRING          reduce using rule 20 (atom -> SYMBOL .)
    SYMBOL          reduce using rule 20 (atom -> SYMBOL .)
    LPAREN          reduce using rule 20 (atom -> SYMBOL .)
    QUOTE           reduce using rule 20 (atom -> SYMBOL .)
    BACKQUOTE       reduce using rule 20 (atom -> SYMBOL .)
    COMMA           reduce using rule 20 (atom -> SYMBOL .)
    COMMA_AT        reduce using rule 20 (atom -> SYMBOL .)
    RPAREN          reduce using rule 20 (atom -> SYMBOL .)
    DOT             reduce using rule 20 (atom -> SYMBOL .)


state 6

    (18) atom -> FLOAT .

    $end            reduce using rule 18 (atom -> FLOAT .)
    INT             reduce using rule 18 (atom -> FLOAT .)
    FLOAT           reduce using rule 18 (atom -> FLOAT .)
    STRING          reduce using rule 18 (atom -> FLOAT .)
    SYMBOL          reduce using rule 18 (atom -> FLOAT .)
    LPAREN          reduce using rule 18 (atom -> FLOAT .)
    QUOTE           reduce using rule 18 (atom -> FLOAT .)
    BACKQUOTE       reduce using rule 18 (atom -> FLOAT .)
    COMMA           reduce using rule 18 (atom -> FLOAT .)
    COMMA_AT        reduce using rule 18 (atom -> FLOAT .)
    RPAREN          reduce using rule 18 (atom -> FLOAT .)
    DOT             reduce using rule 18 (atom -> FLOAT .)


state 7

    (2) sexp -> list .

    INT             reduce using rule 2 (sexp -> list .)
    FLOAT           reduce using rule 2 (sexp -> list .)
    STRING          reduce using rule 2 (sexp -> list .)
    SYMBOL          reduce using rule 2 (sexp -> list .)
    LPAREN          reduce using rule 2 (sexp -> list .)
    QUOTE           reduce using rule 2 (sexp -> list .)
    BACKQUOTE       reduce using rule 2 (sexp -> list .)
    COMMA           reduce using rule 2 (sexp -> list .)
    COMMA_AT        reduce using rule 2 (sexp -> list .)
    RPAREN          reduce using rule 2 (sexp -> list .)
    DOT             reduce using rule 2 (sexp -> list .)
    $end            reduce using rule 2 (sexp -> list .)


state 8

    (11) spliced -> COMMA_AT . list
    (13) list -> . LPAREN sexps RPAREN

    LPAREN          shift and go to state 20

    list                           shift and go to state 19

state 9

    (0) S' -> sexp .



state 10

    (17) atom -> INT .

    $end            reduce using rule 17 (atom -> INT .)
    INT             reduce using rule 17 (atom -> INT .)
    FLOAT           reduce using rule 17 (atom -> INT .)
    STRING          reduce using rule 17 (atom -> INT .)
    SYMBOL          reduce using rule 17 (atom -> INT .)
    LPAREN          reduce using rule 17 (atom -> INT .)
    QUOTE           reduce using rule 17 (atom -> INT .)
    BACKQUOTE       reduce using rule 17 (atom -> INT .)
    COMMA           reduce using rule 17 (atom -> INT .)
    COMMA_AT        reduce using rule 17 (atom -> INT .)
    RPAREN          reduce using rule 17 (atom -> INT .)
    DOT             reduce using rule 17 (atom -> INT .)


state 11

    (6) sexp -> spliced .

    INT             reduce using rule 6 (sexp -> spliced .)
    FLOAT           reduce using rule 6 (sexp -> spliced .)
    STRING          reduce using rule 6 (sexp -> spliced .)
    SYMBOL          reduce using rule 6 (sexp -> spliced .)
    LPAREN          reduce using rule 6 (sexp -> spliced .)
    QUOTE           reduce using rule 6 (sexp -> spliced .)
    BACKQUOTE       reduce using rule 6 (sexp -> spliced .)
    COMMA           reduce using rule 6 (sexp -> spliced .)
    COMMA_AT        reduce using rule 6 (sexp -> spliced .)
    RPAREN          reduce using rule 6 (sexp -> spliced .)
    DOT             reduce using rule 6 (sexp -> spliced .)
    $end            reduce using rule 6 (sexp -> spliced .)


state 12

    (10) unquoted -> COMMA . sexp
    (1) sexp -> . atom
    (2) sexp -> . list
    (3) sexp -> . quoted
    (4) sexp -> . qquoted
    (5) sexp -> . unquoted
    (6) sexp -> . spliced
    (7) sexp -> . dotted_list
    (17) atom -> . INT
    (18) atom -> . FLOAT
    (19) atom -> . STRING
    (20) atom -> . SYMBOL
    (13) list -> . LPAREN sexps RPAREN
    (8) quoted -> . QUOTE sexp
    (9) qquoted -> . BACKQUOTE sexp
    (10) unquoted -> . COMMA sexp
    (11) spliced -> . COMMA_AT list
    (12) dotted_list -> . LPAREN sexps DOT sexp RPAREN

    INT             shift and go to state 10
    FLOAT           shift and go to state 6
    STRING          shift and go to state 1
    SYMBOL          shift and go to state 5
    LPAREN          shift and go to state 15
    QUOTE           shift and go to state 4
    BACKQUOTE       shift and go to state 17
    COMMA           shift and go to state 12
    COMMA_AT        shift and go to state 8

    quoted                         shift and go to state 2
    dotted_list                    shift and go to state 3
    list                           shift and go to state 7
    sexp                           shift and go to state 21
    spliced                        shift and go to state 11
    qquoted                        shift and go to state 13
    atom                           shift and go to state 14
    unquoted                       shift and go to state 16

state 13

    (4) sexp -> qquoted .

    INT             reduce using rule 4 (sexp -> qquoted .)
    FLOAT           reduce using rule 4 (sexp -> qquoted .)
    STRING          reduce using rule 4 (sexp -> qquoted .)
    SYMBOL          reduce using rule 4 (sexp -> qquoted .)
    LPAREN          reduce using rule 4 (sexp -> qquoted .)
    QUOTE           reduce using rule 4 (sexp -> qquoted .)
    BACKQUOTE       reduce using rule 4 (sexp -> qquoted .)
    COMMA           reduce using rule 4 (sexp -> qquoted .)
    COMMA_AT        reduce using rule 4 (sexp -> qquoted .)
    RPAREN          reduce using rule 4 (sexp -> qquoted .)
    DOT             reduce using rule 4 (sexp -> qquoted .)
    $end            reduce using rule 4 (sexp -> qquoted .)


state 14

    (1) sexp -> atom .

    INT             reduce using rule 1 (sexp -> atom .)
    FLOAT           reduce using rule 1 (sexp -> atom .)
    STRING          reduce using rule 1 (sexp -> atom .)
    SYMBOL          reduce using rule 1 (sexp -> atom .)
    LPAREN          reduce using rule 1 (sexp -> atom .)
    QUOTE           reduce using rule 1 (sexp -> atom .)
    BACKQUOTE       reduce using rule 1 (sexp -> atom .)
    COMMA           reduce using rule 1 (sexp -> atom .)
    COMMA_AT        reduce using rule 1 (sexp -> atom .)
    RPAREN          reduce using rule 1 (sexp -> atom .)
    DOT             reduce using rule 1 (sexp -> atom .)
    $end            reduce using rule 1 (sexp -> atom .)


state 15

    (13) list -> LPAREN . sexps RPAREN
    (12) dotted_list -> LPAREN . sexps DOT sexp RPAREN
    (14) sexps -> . sexp sexps
    (15) sexps -> . empty
    (1) sexp -> . atom
    (2) sexp -> . list
    (3) sexp -> . quoted
    (4) sexp -> . qquoted
    (5) sexp -> . unquoted
    (6) sexp -> . spliced
    (7) sexp -> . dotted_list
    (16) empty -> .
    (17) atom -> . INT
    (18) atom -> . FLOAT
    (19) atom -> . STRING
    (20) atom -> . SYMBOL
    (13) list -> . LPAREN sexps RPAREN
    (8) quoted -> . QUOTE sexp
    (9) qquoted -> . BACKQUOTE sexp
    (10) unquoted -> . COMMA sexp
    (11) spliced -> . COMMA_AT list
    (12) dotted_list -> . LPAREN sexps DOT sexp RPAREN

    RPAREN          reduce using rule 16 (empty -> .)
    DOT             reduce using rule 16 (empty -> .)
    INT             shift and go to state 10
    FLOAT           shift and go to state 6
    STRING          shift and go to state 1
    SYMBOL          shift and go to state 5
    LPAREN          shift and go to state 15
    QUOTE           shift and go to state 4
    BACKQUOTE       shift and go to state 17
    COMMA           shift and go to state 12
    COMMA_AT        shift and go to state 8

    quoted                         shift and go to state 2
    dotted_list                    shift and go to state 3
    sexps                          shift and go to state 22
    list                           shift and go to state 7
    sexp                           shift and go to state 23
    spliced                        shift and go to state 11
    qquoted                        shift and go to state 13
    atom                           shift and go to state 14
    unquoted                       shift and go to state 16
    empty                          shift and go to state 24

state 16

    (5) sexp -> unquoted .

    INT             reduce using rule 5 (sexp -> unquoted .)
    FLOAT           reduce using rule 5 (sexp -> unquoted .)
    STRING          reduce using rule 5 (sexp -> unquoted .)
    SYMBOL          reduce using rule 5 (sexp -> unquoted .)
    LPAREN          reduce using rule 5 (sexp -> unquoted .)
    QUOTE           reduce using rule 5 (sexp -> unquoted .)
    BACKQUOTE       reduce using rule 5 (sexp -> unquoted .)
    COMMA           reduce using rule 5 (sexp -> unquoted .)
    COMMA_AT        reduce using rule 5 (sexp -> unquoted .)
    RPAREN          reduce using rule 5 (sexp -> unquoted .)
    DOT             reduce using rule 5 (sexp -> unquoted .)
    $end            reduce using rule 5 (sexp -> unquoted .)


state 17

    (9) qquoted -> BACKQUOTE . sexp
    (1) sexp -> . atom
    (2) sexp -> . list
    (3) sexp -> . quoted
    (4) sexp -> . qquoted
    (5) sexp -> . unquoted
    (6) sexp -> . spliced
    (7) sexp -> . dotted_list
    (17) atom -> . INT
    (18) atom -> . FLOAT
    (19) atom -> . STRING
    (20) atom -> . SYMBOL
    (13) list -> . LPAREN sexps RPAREN
    (8) quoted -> . QUOTE sexp
    (9) qquoted -> . BACKQUOTE sexp
    (10) unquoted -> . COMMA sexp
    (11) spliced -> . COMMA_AT list
    (12) dotted_list -> . LPAREN sexps DOT sexp RPAREN

    INT             shift and go to state 10
    FLOAT           shift and go to state 6
    STRING          shift and go to state 1
    SYMBOL          shift and go to state 5
    LPAREN          shift and go to state 15
    QUOTE           shift and go to state 4
    BACKQUOTE       shift and go to state 17
    COMMA           shift and go to state 12
    COMMA_AT        shift and go to state 8

    quoted                         shift and go to state 2
    dotted_list                    shift and go to state 3
    list                           shift and go to state 7
    sexp                           shift and go to state 25
    spliced                        shift and go to state 11
    qquoted                        shift and go to state 13
    atom                           shift and go to state 14
    unquoted                       shift and go to state 16

state 18

    (8) quoted -> QUOTE sexp .

    RPAREN          reduce using rule 8 (quoted -> QUOTE sexp .)
    $end            reduce using rule 8 (quoted -> QUOTE sexp .)
    INT             reduce using rule 8 (quoted -> QUOTE sexp .)
    FLOAT           reduce using rule 8 (quoted -> QUOTE sexp .)
    STRING          reduce using rule 8 (quoted -> QUOTE sexp .)
    SYMBOL          reduce using rule 8 (quoted -> QUOTE sexp .)
    LPAREN          reduce using rule 8 (quoted -> QUOTE sexp .)
    QUOTE           reduce using rule 8 (quoted -> QUOTE sexp .)
    BACKQUOTE       reduce using rule 8 (quoted -> QUOTE sexp .)
    COMMA           reduce using rule 8 (quoted -> QUOTE sexp .)
    COMMA_AT        reduce using rule 8 (quoted -> QUOTE sexp .)
    DOT             reduce using rule 8 (quoted -> QUOTE sexp .)


state 19

    (11) spliced -> COMMA_AT list .

    INT             reduce using rule 11 (spliced -> COMMA_AT list .)
    FLOAT           reduce using rule 11 (spliced -> COMMA_AT list .)
    STRING          reduce using rule 11 (spliced -> COMMA_AT list .)
    SYMBOL          reduce using rule 11 (spliced -> COMMA_AT list .)
    LPAREN          reduce using rule 11 (spliced -> COMMA_AT list .)
    QUOTE           reduce using rule 11 (spliced -> COMMA_AT list .)
    BACKQUOTE       reduce using rule 11 (spliced -> COMMA_AT list .)
    COMMA           reduce using rule 11 (spliced -> COMMA_AT list .)
    COMMA_AT        reduce using rule 11 (spliced -> COMMA_AT list .)
    RPAREN          reduce using rule 11 (spliced -> COMMA_AT list .)
    DOT             reduce using rule 11 (spliced -> COMMA_AT list .)
    $end            reduce using rule 11 (spliced -> COMMA_AT list .)


state 20

    (13) list -> LPAREN . sexps RPAREN
    (14) sexps -> . sexp sexps
    (15) sexps -> . empty
    (1) sexp -> . atom
    (2) sexp -> . list
    (3) sexp -> . quoted
    (4) sexp -> . qquoted
    (5) sexp -> . unquoted
    (6) sexp -> . spliced
    (7) sexp -> . dotted_list
    (16) empty -> .
    (17) atom -> . INT
    (18) atom -> . FLOAT
    (19) atom -> . STRING
    (20) atom -> . SYMBOL
    (13) list -> . LPAREN sexps RPAREN
    (8) quoted -> . QUOTE sexp
    (9) qquoted -> . BACKQUOTE sexp
    (10) unquoted -> . COMMA sexp
    (11) spliced -> . COMMA_AT list
    (12) dotted_list -> . LPAREN sexps DOT sexp RPAREN

    RPAREN          reduce using rule 16 (empty -> .)
    INT             shift and go to state 10
    FLOAT           shift and go to state 6
    STRING          shift and go to state 1
    SYMBOL          shift and go to state 5
    LPAREN          shift and go to state 15
    QUOTE           shift and go to state 4
    BACKQUOTE       shift and go to state 17
    COMMA           shift and go to state 12
    COMMA_AT        shift and go to state 8

    quoted                         shift and go to state 2
    dotted_list                    shift and go to state 3
    sexps                          shift and go to state 26
    list                           shift and go to state 7
    sexp                           shift and go to state 23
    spliced                        shift and go to state 11
    qquoted                        shift and go to state 13
    atom                           shift and go to state 14
    unquoted                       shift and go to state 16
    empty                          shift and go to state 24

state 21

    (10) unquoted -> COMMA sexp .

    INT             reduce using rule 10 (unquoted -> COMMA sexp .)
    FLOAT           reduce using rule 10 (unquoted -> COMMA sexp .)
    STRING          reduce using rule 10 (unquoted -> COMMA sexp .)
    SYMBOL          reduce using rule 10 (unquoted -> COMMA sexp .)
    LPAREN          reduce using rule 10 (unquoted -> COMMA sexp .)
    QUOTE           reduce using rule 10 (unquoted -> COMMA sexp .)
    BACKQUOTE       reduce using rule 10 (unquoted -> COMMA sexp .)
    COMMA           reduce using rule 10 (unquoted -> COMMA sexp .)
    COMMA_AT        reduce using rule 10 (unquoted -> COMMA sexp .)
    RPAREN          reduce using rule 10 (unquoted -> COMMA sexp .)
    DOT             reduce using rule 10 (unquoted -> COMMA sexp .)
    $end            reduce using rule 10 (unquoted -> COMMA sexp .)


state 22

    (13) list -> LPAREN sexps . RPAREN
    (12) dotted_list -> LPAREN sexps . DOT sexp RPAREN

    RPAREN          shift and go to state 27
    DOT             shift and go to state 28


state 23

    (14) sexps -> sexp . sexps
    (14) sexps -> . sexp sexps
    (15) sexps -> . empty
    (1) sexp -> . atom
    (2) sexp -> . list
    (3) sexp -> . quoted
    (4) sexp -> . qquoted
    (5) sexp -> . unquoted
    (6) sexp -> . spliced
    (7) sexp -> . dotted_list
    (16) empty -> .
    (17) atom -> . INT
    (18) atom -> . FLOAT
    (19) atom -> . STRING
    (20) atom -> . SYMBOL
    (13) list -> . LPAREN sexps RPAREN
    (8) quoted -> . QUOTE sexp
    (9) qquoted -> . BACKQUOTE sexp
    (10) unquoted -> . COMMA sexp
    (11) spliced -> . COMMA_AT list
    (12) dotted_list -> . LPAREN sexps DOT sexp RPAREN

    RPAREN          reduce using rule 16 (empty -> .)
    DOT             reduce using rule 16 (empty -> .)
    INT             shift and go to state 10
    FLOAT           shift and go to state 6
    STRING          shift and go to state 1
    SYMBOL          shift and go to state 5
    LPAREN          shift and go to state 15
    QUOTE           shift and go to state 4
    BACKQUOTE       shift and go to state 17
    COMMA           shift and go to state 12
    COMMA_AT        shift and go to state 8

    quoted                         shift and go to state 2
    dotted_list                    shift and go to state 3
    sexps                          shift and go to state 29
    list                           shift and go to state 7
    sexp                           shift and go to state 23
    spliced                        shift and go to state 11
    qquoted                        shift and go to state 13
    atom                           shift and go to state 14
    unquoted                       shift and go to state 16
    empty                          shift and go to state 24

state 24

    (15) sexps -> empty .

    RPAREN          reduce using rule 15 (sexps -> empty .)
    DOT             reduce using rule 15 (sexps -> empty .)


state 25

    (9) qquoted -> BACKQUOTE sexp .

    INT             reduce using rule 9 (qquoted -> BACKQUOTE sexp .)
    FLOAT           reduce using rule 9 (qquoted -> BACKQUOTE sexp .)
    STRING          reduce using rule 9 (qquoted -> BACKQUOTE sexp .)
    SYMBOL          reduce using rule 9 (qquoted -> BACKQUOTE sexp .)
    LPAREN          reduce using rule 9 (qquoted -> BACKQUOTE sexp .)
    QUOTE           reduce using rule 9 (qquoted -> BACKQUOTE sexp .)
    BACKQUOTE       reduce using rule 9 (qquoted -> BACKQUOTE sexp .)
    COMMA           reduce using rule 9 (qquoted -> BACKQUOTE sexp .)
    COMMA_AT        reduce using rule 9 (qquoted -> BACKQUOTE sexp .)
    RPAREN          reduce using rule 9 (qquoted -> BACKQUOTE sexp .)
    $end            reduce using rule 9 (qquoted -> BACKQUOTE sexp .)
    DOT             reduce using rule 9 (qquoted -> BACKQUOTE sexp .)


state 26

    (13) list -> LPAREN sexps . RPAREN

    RPAREN          shift and go to state 27


state 27

    (13) list -> LPAREN sexps RPAREN .

    INT             reduce using rule 13 (list -> LPAREN sexps RPAREN .)
    FLOAT           reduce using rule 13 (list -> LPAREN sexps RPAREN .)
    STRING          reduce using rule 13 (list -> LPAREN sexps RPAREN .)
    SYMBOL          reduce using rule 13 (list -> LPAREN sexps RPAREN .)
    LPAREN          reduce using rule 13 (list -> LPAREN sexps RPAREN .)
    QUOTE           reduce using rule 13 (list -> LPAREN sexps RPAREN .)
    BACKQUOTE       reduce using rule 13 (list -> LPAREN sexps RPAREN .)
    COMMA           reduce using rule 13 (list -> LPAREN sexps RPAREN .)
    COMMA_AT        reduce using rule 13 (list -> LPAREN sexps RPAREN .)
    RPAREN          reduce using rule 13 (list -> LPAREN sexps RPAREN .)
    $end            reduce using rule 13 (list -> LPAREN sexps RPAREN .)
    DOT             reduce using rule 13 (list -> LPAREN sexps RPAREN .)


state 28

    (12) dotted_list -> LPAREN sexps DOT . sexp RPAREN
    (1) sexp -> . atom
    (2) sexp -> . list
    (3) sexp -> . quoted
    (4) sexp -> . qquoted
    (5) sexp -> . unquoted
    (6) sexp -> . spliced
    (7) sexp -> . dotted_list
    (17) atom -> . INT
    (18) atom -> . FLOAT
    (19) atom -> . STRING
    (20) atom -> . SYMBOL
    (13) list -> . LPAREN sexps RPAREN
    (8) quoted -> . QUOTE sexp
    (9) qquoted -> . BACKQUOTE sexp
    (10) unquoted -> . COMMA sexp
    (11) spliced -> . COMMA_AT list
    (12) dotted_list -> . LPAREN sexps DOT sexp RPAREN

    INT             shift and go to state 10
    FLOAT           shift and go to state 6
    STRING          shift and go to state 1
    SYMBOL          shift and go to state 5
    LPAREN          shift and go to state 15
    QUOTE           shift and go to state 4
    BACKQUOTE       shift and go to state 17
    COMMA           shift and go to state 12
    COMMA_AT        shift and go to state 8

    quoted                         shift and go to state 2
    dotted_list                    shift and go to state 3
    list                           shift and go to state 7
    sexp                           shift and go to state 30
    spliced                        shift and go to state 11
    qquoted                        shift and go to state 13
    atom                           shift and go to state 14
    unquoted                       shift and go to state 16

state 29

    (14) sexps -> sexp sexps .

    RPAREN          reduce using rule 14 (sexps -> sexp sexps .)
    DOT             reduce using rule 14 (sexps -> sexp sexps .)


state 30

    (12) dotted_list -> LPAREN sexps DOT sexp . RPAREN

    RPAREN          shift and go to state 31


state 31

    (12) dotted_list -> LPAREN sexps DOT sexp RPAREN .

    $end            reduce using rule 12 (dotted_list -> LPAREN sexps DOT sexp RPAREN .)
    INT             reduce using rule 12 (dotted_list -> LPAREN sexps DOT sexp RPAREN .)
    FLOAT           reduce using rule 12 (dotted_list -> LPAREN sexps DOT sexp RPAREN .)
    STRING          reduce using rule 12 (dotted_list -> LPAREN sexps DOT sexp RPAREN .)
    SYMBOL          reduce using rule 12 (dotted_list -> LPAREN sexps DOT sexp RPAREN .)
    LPAREN          reduce using rule 12 (dotted_list -> LPAREN sexps DOT sexp RPAREN .)
    QUOTE           reduce using rule 12 (dotted_list -> LPAREN sexps DOT sexp RPAREN .)
    BACKQUOTE       reduce using rule 12 (dotted_list -> LPAREN sexps DOT sexp RPAREN .)
    COMMA           reduce using rule 12 (dotted_list -> LPAREN sexps DOT sexp RPAREN .)
    COMMA_AT        reduce using rule 12 (dotted_list -> LPAREN sexps DOT sexp RPAREN .)
    RPAREN          reduce using rule 12 (dotted_list -> LPAREN sexps DOT sexp RPAREN .)
    DOT             reduce using rule 12 (dotted_list -> LPAREN sexps DOT sexp RPAREN .)

