#! /usr/bin/env python
# ______________________________________________________________________
# Automatically generated by PyPgen.  Edit at your own risk.
# ______________________________________________________________________
# Module imports

from basil.parsing import PyPgen

# ______________________________________________________________________
# Grammar object

grammarObj = ([(256,
   'start',
   0,
   [([(2, 0), (3, 0), (4, 1)], (0, 0, ()), 0), ([(0, 1)], (0, 0, ()), 0)],
   '4\x00\x00\x00'),
  (257,
   'fndef',
   0,
   [([(5, 1)], (0, 0, ()), 0),
    ([(6, 2)], (0, 0, ()), 0),
    ([(7, 3)], (0, 0, ()), 0),
    ([(8, 4), (9, 5)], (0, 0, ()), 0),
    ([(9, 5)], (0, 0, ()), 0),
    ([(10, 6)], (0, 0, ()), 0),
    ([(2, 7)], (0, 0, ()), 0),
    ([(11, 8)], (0, 0, ()), 0),
    ([(12, 9)], (0, 0, ()), 0),
    ([(12, 9), (13, 10)], (0, 0, ()), 0),
    ([(0, 10)], (0, 0, ()), 0)],
   ' \x00\x00\x00'),
  (258,
   'parameters',
   0,
   [([(6, 1)], (0, 0, ()), 0), ([(14, 0), (0, 1)], (0, 0, ()), 0)],
   '@\x00\x00\x00'),
  (259,
   'stmt',
   0,
   [([(15, 1), (16, 1)], (0, 0, ()), 0),
    ([(2, 2)], (0, 0, ()), 0),
    ([(0, 2)], (0, 0, ()), 0)],
   '@\x00\x00\x0e'),
  (260,
   'call',
   0,
   [([(6, 1)], (0, 0, ()), 0),
    ([(10, 2), (17, 3), (7, 4)], (0, 0, ()), 0),
    ([(6, 5)], (0, 0, ()), 0),
    ([(6, 6)], (0, 0, ()), 0),
    ([(18, 7), (9, 8)], (0, 0, ()), 0),
    ([(17, 3)], (0, 0, ()), 0),
    ([(7, 4)], (0, 0, ()), 0),
    ([(9, 8)], (0, 0, ()), 0),
    ([(0, 8)], (0, 0, ()), 0)],
   '@\x00\x00\x00'),
  (261,
   'args',
   0,
   [([(19, 1)], (0, 0, ()), 0), ([(14, 0), (0, 1)], (0, 0, ()), 0)],
   '@\x000\x00'),
  (262,
   'atom',
   0,
   [([(6, 1), (20, 1), (21, 2)], (0, 0, ()), 0),
    ([(0, 1)], (0, 0, ()), 0),
    ([(21, 2), (0, 2)], (0, 0, ()), 0)],
   '@\x000\x00'),
  (263,
   'ctrl_flow',
   0,
   [([(22, 1), (23, 1), (24, 1)], (0, 0, ()), 0), ([(0, 1)], (0, 0, ()), 0)],
   '\x00\x00\x00\x0e'),
  (264,
   'branch',
   0,
   [([(25, 1)], (0, 0, ()), 0),
    ([(19, 2)], (0, 0, ()), 0),
    ([(6, 3)], (0, 0, ()), 0),
    ([(0, 3)], (0, 0, ()), 0)],
   '\x00\x00\x00\x02'),
  (265,
   'goto',
   0,
   [([(26, 1)], (0, 0, ()), 0),
    ([(6, 2)], (0, 0, ()), 0),
    ([(0, 2)], (0, 0, ()), 0)],
   '\x00\x00\x00\x04'),
  (266,
   'return',
   0,
   [([(27, 1)], (0, 0, ()), 0),
    ([(19, 2)], (0, 0, ()), 0),
    ([(0, 2)], (0, 0, ()), 0)],
   '\x00\x00\x00\x08')],
 [(0, 'EMPTY'),
  (256, None),
  (4, None),
  (257, None),
  (0, None),
  (1, 'def'),
  (1, None),
  (7, None),
  (258, None),
  (8, None),
  (11, None),
  (5, None),
  (259, None),
  (6, None),
  (12, None),
  (263, None),
  (260, None),
  (22, None),
  (261, None),
  (262, None),
  (2, None),
  (3, None),
  (264, None),
  (265, None),
  (266, None),
  (1, 'test'),
  (1, 'goto'),
  (1, 'return')],
 256,
 0)

# ______________________________________________________________________

def getParser (tokenizerFactory = None):
    return PyPgen.PyPgenParser(grammarObj, tokenizerFactory)

# ______________________________________________________________________

if __name__ == '__main__':
    PyPgen.parserMain(grammarObj)

# ______________________________________________________________________
# End of parser
