-- ______________________________________________________________________
-- bvpir.asdl
--
-- A small imperative language abstract syntax definition.
--
-- Jonathan Riehl
--
-- $Id$
-- ______________________________________________________________________

module BVP version "$Revision$"
{

    closure  = BVPClosure (decl * decs, stmt* body)

    decl = VDec(identifier id, string ty, string? dim, string? init)

         attributes (int lineno)

    stmt = Loop(identifier? loop_var,
                identifier  loop_iter,
                stmt * body)
         | Assign (lvalue lhs, expr rhs)
         | SumAssign (lvalue lhs, expr rhs)
         | Special (identifier sid) -- Special refers to name indexed
                                    -- boilerplate code.

         attributes (int lineno)

    expr = Index (expr iexpr, expr index)
         | Mult (expr* exprs)
         | Sum (identifier? loop_var, identifier loop_iter, expr sexpr)
         | Var (identifier vid)
         | Const (object val)

         attributes (int lineno)

    lvalue = LIndex (lvalue expr, expr index)
           | LVar (identifier lvid)

           attributes (int lineno)

}

-- ______________________________________________________________________
-- End of bvpir.asdl
